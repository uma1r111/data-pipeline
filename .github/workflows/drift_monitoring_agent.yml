name: Drift Monitoring Agent

on:
  # push:
  #   branches:
  #     - main             # Triggers when code is pushed to main
  schedule:
    - cron: "0 10 * * *"  # Runs daily at 10 AM UTC == 3 PM PKT
  workflow_dispatch:     # Allows manual triggering from GitHub UI
  

env:
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

jobs:
  drift-monitoring:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy scipy scikit-learn google-generativeai
        pip install -r requirements.txt

    - name: Check if preprocessed data exists
      id: check_data
      run: |
        if [ -f "data/full_preprocessed_aqi_weather_data_with_all_features.csv" ]; then
          echo "data_exists=true" >> $GITHUB_OUTPUT
          echo "Data file found, proceeding with drift analysis"
        else
          echo "data_exists=false" >> $GITHUB_OUTPUT
          echo "Warning: Preprocessed data not found, skipping drift analysis"
        fi

    - name: Run Drift Monitoring Agent
      if: steps.check_data.outputs.data_exists == 'true'
      run: |
        python agents/drift_monitoring_agent/drift_agent.py
      env:
        DATA_PATH: "data/full_preprocessed_aqi_weather_data_with_all_features.csv"
        OUTPUT_PATH: "agents/drift_monitoring_agent/outputs/drift_analysis.json"
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Commit drift analysis results
      if: steps.check_data.outputs.data_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add agents/drift_monitoring_agent/outputs/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ðŸ¤– Drift analysis results - $(date '+%Y-%m-%d %H:%M')"
          git push
        fi

    # - name: Create Issue if Drift Detected
    #   if: steps.check_data.outputs.data_exists == 'true'
    #   run: |
    #     SEASONAL_SHIFT=$(jq -r '.seasonal_shift_detected' agents/drift_monitoring_agent/outputs/drift_analysis.json)
    #     FEATURES_COUNT=$(jq '.features_to_add | length' agents/drift_monitoring_agent/outputs/drift_analysis.json)
        
    #     if [ "$SEASONAL_SHIFT" = "true" ]; then
    #       gh issue create \
    #         --title "ðŸš¨ Seasonal Drift Detected - Data Enrichment Required" \
    #         --body "## Drift Monitoring Alert

# The drift monitoring agent has detected significant seasonal shifts in the AQI prediction features.

# **Drift Analysis Results:**
# - Seasonal shift detected: âœ… True
# - Features to add: $FEATURES_COUNT
# - Timestamp: $(date)

# **Next Steps:**
# 1. Data enrichment workflow triggered automatically
# 2. Review suggested features in \`agents/drift_monitoring_agent/outputs/drift_analysis.json\`
# 3. Monitor data collection for new features

# **Files Updated:**
# - \`agents/drift_monitoring_agent/outputs/drift_analysis.json\`

# This issue will auto-close when the data enrichment workflow completes successfully." \
#             --label "drift-alert,automated,high-priority"
#         fi

    - name: Summary
      if: always()
      run: |
        echo "## Drift Monitoring Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Data file exists: ${{ steps.check_data.outputs.data_exists }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.check_data.outputs.data_exists }}" = "true" ]; then
          SEASONAL_SHIFT=$(jq -r '.seasonal_shift_detected' agents/drift_monitoring_agent/outputs/drift_analysis.json)
          FEATURES_COUNT=$(jq '.features_to_add | length' agents/drift_monitoring_agent/outputs/drift_analysis.json)
          echo "- Seasonal shift detected: $SEASONAL_SHIFT" >> $GITHUB_STEP_SUMMARY
          echo "- Features recommended: $FEATURES_COUNT" >> $GITHUB_STEP_SUMMARY
        fi
