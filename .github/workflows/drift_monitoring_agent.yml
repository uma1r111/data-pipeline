name: Drift Monitoring Agent

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # Daily at 6 AM UTC (11 AM Karachi time)
  workflow_run:
    workflows: ["Feature Engineering"]
    types:
      - completed

env:
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

jobs:
  drift-monitoring:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy scipy scikit-learn google-generativeai
        pip install -r requirements.txt

    - name: Check if preprocessed data exists
      id: check_data
      run: |
        if [ -f "data/full_preprocessed_aqi_weather_data_with_all_features.csv" ]; then
          echo "data_exists=true" >> $GITHUB_OUTPUT
          echo "Data file found, proceeding with drift analysis"
        else
          echo "data_exists=false" >> $GITHUB_OUTPUT
          echo "Warning: Preprocessed data not found, skipping drift analysis"
        fi

    - name: Run Drift Monitoring Agent
      if: steps.check_data.outputs.data_exists == 'true'
      run: |
        python agents/drift_monitoring_agent/drift_agent.py
      env:
        DATA_PATH: "data/full_preprocessed_aqi_weather_data_with_all_features.csv"
        OUTPUT_PATH: "agents/drift_monitoring_agent/outputs/drift_analysis.json"
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Commit drift analysis results
      if: steps.check_data.outputs.data_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add agents/drift_monitoring_agent/outputs/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ðŸ¤– Drift analysis results - $(date '+%Y-%m-%d %H:%M')"
          git push
        fi

    - name: Summary
      if: steps.check_data.outputs.data_exists == 'true'
      run: |
        python -c "
import json
with open('agents/drift_monitoring_agent/outputs/drift_analysis.json', 'r') as f:
    data = json.load(f)

print('## Drift Monitoring Summary', flush=True)
print(f'- Data file exists: True', flush=True)
print(f'- Seasonal shift detected: {data[\"seasonal_shift_detected\"]}', flush=True)
print(f'- Features recommended: {len(data[\"features_to_add\"])}', flush=True)
        "
